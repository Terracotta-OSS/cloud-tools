#!/usr/bin/env bash

toolchains_file="$HOME/.m2/toolchains.xml"
gradle_props_file="$HOME/.gradle/gradle.properties"
gradle_init_file="$HOME/.gradle/init.d/buildScan.gradle"

  
function log() {
  echo "$0: $*"
}



# vendor, version, path
function _add_toolchain() {
  cat >> $toolchains_file <<EOF

    <toolchain>
        <type>jdk</type>
        <provides>
            <version>$2</version>
            <vendor>$1</vendor>
        </provides>
        <configuration>
            <jdkHome>$3</jdkHome>
        </configuration>
    </toolchain>
 
EOF
}

function _start_toolchains() {
  mkdir -p "$HOME/.m2"
  cat > $toolchains_file <<EOF
<?xml version="1.0" encoding="UTF-8"?>
  <toolchains>
EOF
}

function _end_toolchains() {
  echo "</toolchains>" >> $toolchains_file
  
  cat $toolchains_file
}

function _start_gradle() {
  mkdir -p $(dirname $gradle_init_file)
  mkdir -p $(dirname $gradle_props_file)

  cat > $gradle_init_file <<EOF
// generated by terracotta cloud init  
initscript {
  repositories {
    maven { url 'https://plugins.gradle.org/m2' }
  }

  dependencies {
    classpath 'com.gradle:build-scan-plugin:1.11'
  }
}

rootProject {
  apply plugin: com.gradle.scan.plugin.BuildScanPlugin
  buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
  }
}
EOF

  cat > $gradle_props_file <<EOF
org.gradle.daemon=false
org.gradle.parallel=
EOF
}

# params same as _add_toolchain
function _add_gradle() {
  local minor_version=$(echo $2 | cut -d . -f 2)
  cat >> $gradle_props_file <<EOF
# Generated from $*
java${minor_version}Home=$3
EOF
}

function _end_gradle() {
  # not much for now
  echo "" >> $gradle_props_file 
  
  cat $gradle_props_file
}

function _add_java() {
  # preserve quoting:
  _add_toolchain "$1" "$2" "$3"
  _add_gradle "$1" "$2" "$3"
}

function generate() {  
  
  _start_toolchains
  _start_gradle

  # look at the installed JDKs
   
  # oracle paths:
  find /usr/java -type f -name javac | grep -v jre | grep -E "[0-9]\.[0-9]" | sort | sed "s/^\(.*jdk\([0-9]\.[0-9]\)\.[0-9].*\)\/bin\/javac$/\2 \1/" | while read line ; do
    _add_java 'Oracle Corporation' $line
  done 
   
  # openjdk paths
  find /usr/lib*/jvm -type f -name javac | grep -v jre | grep -E "[0-9]\.[0-9]" | sort | sed "s/^\(.*java-\([0-9]\.[0-9]\)\.[0-9].*\)\/bin\/javac$/\2 \1/" | while read line ; do
    _add_java openjdk $line
  done
  
  # zulu paths:
  find /usr/lib*/jvm -type f -name javac | grep -v jre | grep -E -- "zulu-" | sort | sed "s/^\(.*zulu-\([^/]*\)\)\/bin\/javac$/1.\2 \1/" | while read line ; do
    _add_java zulu $line 
  done
  
  # ubuntu style
  find /usr/lib*/jvm -type f -name javac | grep -E -- "-[0-9]*-" | sort | sed 's|^\(.*java-\([0-9]*\)-\([^/^-]*\).*\)\/bin\/javac$|\3 1.\2 \1|' | while read line ; do
    # returns "vendor version path"
    _add_java $line
  done
  
  _end_toolchains
  _end_gradle
    
  # debug
  find /usr/lib/jvm* -type f -name javac
}

function inspect_machine() {
  grep -i processor /proc/cpuinfo
  free -h
  df -h
}

generate
inspect_machine
